services:
  db-mysql:
    profiles: ["MySql"]
    restart: always
    image: mysql:latest
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    environment:
      - TZ=Europe/Warsaw
      - MYSQL_ROOT_PASSWORD=${DB_PWD}
      - MYSQL_DATABASE=IotAdmin
    volumes:
      - ${DB_DIR_MYSQL}:/var/lib/mysql
    ports:
      - ${DB_PORT_MYSQL}:3306
    healthcheck:
      test: mysqladmin ping -h localhost
      interval: 120s
      timeout: 30s
      retries: 10
    tty: true
    privileged: true
    networks:
      - iot-admin
  
  db-mongodb:
    profiles: ["MongoDb"]
    restart: always
    image: mongo:latest
    container_name: ${COMPOSE_PROJECT_NAME}-mongodb
    environment:
      - TZ=Europe/Warsaw
    volumes:
      - ${DB_DIR_MONGODB}:/data/db
    ports:
      - ${DB_PORT_MONGODB}:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017 --quiet
      interval: 120s
      timeout: 30s
      retries: 10
    tty: true
    privileged: true
    networks:
      - iot-admin
  
  api:
    profiles: ["Mock", "SQLite", "MySql", "MongoDb"]
    depends_on:
      db-mongodb:
        condition: service_healthy
        required: false
      db-mysql:
        condition: service_healthy
        required: false
    restart: always
    image: qbituniverse/iot-admin-api:latest
    container_name: ${COMPOSE_PROJECT_NAME}-api
    environment:
      - TZ=Europe/Warsaw
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ApiConfiguration__Environment=${ENVIRONMENT}
      - ApiConfiguration__LogLevel__Console=${LOGLEVEL_CONSOLE}
      - ApiConfiguration__LogLevel__Database=${LOGLEVEL_DATABASE}
      - ApiConfiguration__Repository__Type=${COMPOSE_PROFILES}
      - ApiConfiguration__Repository__SQLite__Url=/data/db/IotAdmin.db
      - ApiConfiguration__Repository__MySql__Url=Server=${COMPOSE_PROJECT_NAME}-mysql;Port=3306;User ID=root;Password=${DB_PWD};Database=IotAdmin
      - ApiConfiguration__Repository__MongoDb__Url=mongodb://${COMPOSE_PROJECT_NAME}-mongodb:27017
      - ApiConfiguration__Modules__Gpio__Type=${GPIO}
    volumes:
      - ${DB_DIR_SQLITE}:/data/db
    ports:
      - ${API_PORT}:8080
    healthcheck:
      test: curl --fail http://localhost:8080/healthz || exit 1
      interval: 30s
      timeout: 30s
      retries: 10
    tty: true
    privileged: true
    networks:
      - iot-admin
  
  web:
    profiles: ["Mock", "SQLite", "MySql", "MongoDb"]
    depends_on:
      api:
        condition: service_healthy
        required: true
    restart: always
    image: qbituniverse/iot-admin-web:latest
    container_name: ${COMPOSE_PROJECT_NAME}-web
    environment:
      - TZ=Europe/Warsaw
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - WebConfiguration__Environment=${ENVIRONMENT}
      - WebConfiguration__LogLevel__Console=${LOGLEVEL_CONSOLE}
      - WebConfiguration__LogLevel__Database=${LOGLEVEL_DATABASE}
      - WebConfiguration__Repository__Type=${COMPOSE_PROFILES}
      - WebConfiguration__Repository__SQLite__Url=/data/db/IotAdmin.db
      - WebConfiguration__Repository__MySql__Url=Server=${COMPOSE_PROJECT_NAME}-mysql;Port=3306;User ID=root;Password=${DB_PWD};Database=IotAdmin
      - WebConfiguration__Repository__MongoDb__Url=mongodb://${COMPOSE_PROJECT_NAME}-mongodb:27017
      - WebConfiguration__Api__Url=http://${COMPOSE_PROJECT_NAME}-api:8080
    volumes:
      - ${DB_DIR_SQLITE}:/data/db
    ports:
      - ${WEB_PORT}:8080
    healthcheck:
      test: curl --fail http://localhost:8080/healthz || exit 1
      interval: 30s
      timeout: 30s
      retries: 10
    tty: true
    privileged: true
    networks:
      - iot-admin

  sqlitebrowser:
    profiles: ["SQLite"]
    depends_on:
      web:
        condition: service_healthy
        required: true
    restart: always
    image: lscr.io/linuxserver/sqlitebrowser:latest
    container_name: ${COMPOSE_PROJECT_NAME}-sqlitebrowser
    security_opt:
      - seccomp:unconfined
    environment:
      - TZ=Europe/Warsaw
      - PUID=1000
      - PGID=1000
    volumes:
      - ${DB_DIR_SQLITE}:/data/db
    ports:
      - ${DB_PORT_SQLITE}:3000
    tty: true
    privileged: true
    networks:
      - iot-admin

networks:
  iot-admin:
    name: ${COMPOSE_PROJECT_NAME}-bridge
    driver: bridge